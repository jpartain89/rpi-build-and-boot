---

- name: Update/Upgrade apt
  apt:
    upgrade: "{{ item }}"
    update_cache: yes
  with_items:
    - yes
    - full
    - dist

- name: Create /opt/raspberrypi
  file:
    path: "{{ pi_os_root }}"
    state: directory

- name: Create SubDirectories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ pi_os_root }}/root"
    - "{{ pi_os_root }}/boot"

- name: Install NFS-Kernel-Server
  apt:
    name: nfs-kernel-server
    state: latest

- name: Setup NFS Exports
  lineinfile:
    dest: /etc/exports
    line: "/opt/raspberrypi/root 10.0.100.0/24(rw,sync,no_root_squash,no_subtree_check)"

- name: Setup Cron Mount
  lineinfile:
    dest: /etc/cron.d/opt_raspberrypi_root
    line: "* * * * * root /bin/mount /opt/raspberrypi/root"
    create: yes

- name: Restart NFS
  service:
    name: nfs-kernel-server
    state: restarted

- name: Install Required Packages
  apt:
    name: "{{ item }}"
    state: latest
  loop: "{{ rpi_apt | flatten(levels=1) }}"

- name: Upgrade pip
  command: 'pip3 install -U pip 2>/dev/null'
  failed_when: false

- name: Pip Package Installation
  pip:
    name: "{{ item }}"
    state: latest
    executable: pip3.5
  loop: "{{ rpi_pip | flatten(levels=1) }}"

- name: Install tinyproxy
  apt:
    name: tinyproxy
    state: latest

- name: Update TinyProxy Conf File
  lineinfile:
    dest: "/etc/tinyproxy.conf"
    line: "Allow 10.0.100.0/8"

- name: Restart TinyProxy Service
  service:
    name: tinyproxy
    state: restarted

- name: RPI Mounting Boot
  mount:
    src: "/vagrant/{{ image }}"
    name: "/opt/raspberrypi/boot"
    fstype: "auto"
    opts: "loop,offset={{ offset_boot }},noauto"
    state: "mounted"

- name: RPI Mounting Root
  mount:
    src: "/vagrant/{{ image }}"
    name: "/opt/raspberrypi/root"
    fstype: "auto"
    opts: "loop,offset={{ offset_root }},noauto"
    state: "mounted"

- name: rc.local Root
  lineinfile:
    dest: /etc/rc.local
    line: "mount /opt/raspberrypi/root"
    insertbefore: "exit 0"

- name: rc.local Boot
  lineinfile:
    dest: /etc/rc.local
    line: "mount /opt/raspberrypi/boot"
    insertbefore: "exit 0"

# the pi is unbootable unless it is told not to mount the root filesystem from the card!
- name: Remove mounting the SD Card
  lineinfile:
    dest: /opt/raspberrypi/root/etc/fstab
    regexp: "^\/dev\/mmcblk0p2"
    state: "absent"

- name: Update cmdline.txt
  replace:
    dest: /opt/raspberrypi/boot/cmdline.txt
    regexp: "rootwait$"
    replace: "dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 elevator=deadline root=/dev/nfs rootfstype=nfs nfsroot=10.0.100.1:/opt/raspberrypi/root,udp,vers=3 rw fsck.repair=no rootwait ip=10.0.100.101:10.0.100.1:10.0.100.1:255.255.255.0:rpi:eth0:off smsc95xx.turbo_mode=N"
    backup: no

# build helpies
- name: Create RPI_BUILD_ROOT Directory
  file:
    path: /opt/RPI_BUILD_ROOT
    state: directory

- name: Create RPI_BUILD_ROOT SubDirectory
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - '{ src: "/opt/raspberrypi/root/etc", dest: "/opt/RPI_BUILD_ROOT/etc" }'
    - '{ src: "/opt/raspberrypi/root/lib", dest: "/opt/RPI_BUILD_ROOT/lib" }'
    - '{ src: "/opt/raspberrypi/root/opt", dest: "/opt/RPI_BUILD_ROOT/opt" }'

- name: Copy root/usr
  synchronize:
    src: /opt/raspberrypi/root/usr/
    dest: /opt/RPI_BUILD_ROOT/usr/
  delegate_to: "{{ inventory_hostname }}"

- name: Link Files
  file:
    src: "/opt/raspberrypi/root/lib/arm-linux-gnueabihf/{{ item.src }}"
    dest: "/opt/raspberrypi/root/usr/lib/arm-linux-gnueabihf/{{ item.dest }}"
    state: link
  loop: "{{ rpi_file_link }}"

- name: Create tmp Dir
  file:
    path: /tmp/CROSS_BUILD_TOOLS
    state: directory

- name: Run Shell Script
  script: ./build_cross_gcc.sh
  args:
    chdir: /tmp/CROSS_BUILD_TOOLS
    creates: /opt/cross/bin/arm-linux-gnueabihf-g++

- name: Setup .profile
  lineinfile:
    dest: "/home/vagrant/.profile"
    line: "{{ item }}"
  with_items:
    - "export GST_VERSION=1.0"
    - "export RPI_ROOT=/opt/raspberrypi/root"
    - "export TOOLCHAIN_ROOT=/opt/cross/bin"
    - "export PLATFORM_OS=Linux"
    - "export PLATFORM_ARCH=armv7l"
    - "export PKG_CONFIG_PATH=$RPI_ROOT/usr/lib/arm-linux-gnueabihf/pkgconfig:$RPI_ROOT/usr/share/pkgconfig:$RPI_ROOT/usr/lib/pkgconfig"
    #- "export RPI_BUILD_ROOT=/opt/RPI_BUILD_ROOT"

- name: Unarchive OS Image
  unarchive:
    src: "{{ of_version }}.tar.gz"
    dest: /opt/raspberrypi/root/opt
    creates: "/opt/raspberrypi/root/opt/{{ of_version }}"

- name: Setup oF Link 1
  file:
    src: "{{ of_version }}"
    dest: /opt/raspberrypi/root/opt/openframeworks
    state: link

- name: Setup oF Link 2
  file:
    src: /opt/raspberrypi/root/opt/openframeworks
    dest: /opt/openframeworks
    state: link

- name: Set File Ownership
  file:
    path: "/opt/raspberrypi/root/opt/{{ of_version }}"
    state: touch
    owner: vagrant
